install.packages(shiny)
install.package(shiny)
library(shiny)
install.packages("shiny")
library(shiny)
server <- function(input, output, session) { } #the server
ui <- basicPage("This is a real Shiny app") # the user interface
shinyApp(ui = ui, server = server) # this launches your app
#### server
server <- function(input, output, session) {
}
#### user interface
ui <- fluidPage(
titlePanel("App with simple layout"),
sidebarLayout(
sidebarPanel(
"Sidebar"
), #endsidebarpanel
mainPanel(
"This is the main panel"
)#end mainpanel
)# end sidebarlayout
)
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
}
ui <- basicPage(
h1("Title without tags$"),
tags$blockquote("But block quote requires tags$ because it is less common than h3, h1 or code"),
h3("H3 is fine without tags and so is code here"),
code("data.frame(a=1:10, b=1:10)")
)
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
}
ui <- fluidPage(
fluidRow(
column(6, offset=1,
h1("Title in one row")
)
),
fluidRow(
column(1,
actionButton("button", "Click")
),
column(6,
p("Row 2, Column 2 (button is col 1)")
)
)
)
shinyApp(ui = ui, server = server)
install.packages("shinythemes")
library(shinythemes)
server <- function(input, output, session) {
}
ui <- fluidPage(theme=shinytheme("cosmo"),
titlePanel("Use an existing theme"),
sidebarLayout(
sidebarPanel(
h3("Note the button is black. This is different from the previous app."),
actionButton("button", "A button")
),
mainPanel(
tabsetPanel(
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
)
)
)
)
shinyApp(ui = ui, server = server)
runApp('GitHub/Brioche/shiny_test.R')
runApp('GitHub/Brioche/shiny_test.R')
runApp('GitHub/Brioche/shiny_test.R')
runApp('GitHub/Brioche/shiny_test.R')
runApp('GitHub/Brioche/shiny_test.R')
runApp('GitHub/Brioche/shiny_test.R')
runApp('GitHub/Brioche/shiny_test.R')
